;****************************************************************************
; Macro to invoke a syscall
;****************************************************************************

syscall:    macro call
    jsr     $200+(call)*6
    endm

;****************************************************************************
; Names for each API call
;****************************************************************************

OS_LOADPROCESS:         equ 10      ; Load new process
OS_QUITPROCESS:         equ 11      ; Quit current process

OS_PARSELAYOUT:         equ 6       ; Parse GUI layout
OS_GUILOOP:             equ 7       ; Run GUI main loop
OS_GETSTATE:            equ 14      ; Retrieve a GUI state value
OS_SETSTATE:            equ 15      ; Change a GUI state value
OS_GETEVENTXY:          equ 40      ; Get cursor position for last GUI event

OS_LOADPATTERNS:        equ 0       ; Loads patterns into VRAM
OS_FILLPATTERNS:        equ 13      ; Fills patterns with a solid color
OS_RENDERTEXT:          equ 17      ; Renders text into patterns
OS_LOADTEXTLIST:        equ 18      ; Renders and loads a list of text
OS_LOADPALETTE:         equ 4       ; Loads a palette into CRAM

OS_PUTTILE:             equ 39      ; Draws a single tile
OS_DRAWTILES:           equ 1       ; Draws tiles with consecutive patterns
OS_FILLTILES:           equ 2       ; Fills tiles with a single pattern
OS_ERASETILES:          equ 3       ; Fills tiles with a blank pattern
OS_DRAWTILEMAP:         equ 5       ; Draws tiles using the given mappings
OS_FILLFRAME:           equ 8       ; Fills tiles with a frame
OS_DRAWLABELS:          equ 16      ; Draws a bunch of labels
OS_FILLBACKGROUND:      equ 9       ; Fills plane B with 2Ã—2 tiles

OS_SETBGCOLOR:          equ 33      ; Changes the background color

OS_SETSCROLL:           equ 12      ; Set scroll positions

OS_ALLOCSPRITE:         equ 26      ; Allocate a new sprite
OS_SETSPRITE:           equ 27      ; Set a sprite's properties

OS_SETCURSOR:           equ 31      ; Sets the cursor shape
OS_GETCURSORPOS:        equ 34      ; Gets the cursor position

OS_BEEP:                equ 36      ; Beep!

OS_GETMOUSESWAP:        equ 21      ; Retrieves the mouse swap setting
OS_SETMOUSESWAP:        equ 22      ; Changes the mouse swap setting
OS_GETMOUSETYPE:        equ 19      ; Retrieves the mouse type
OS_SETMOUSETYPE:        equ 20      ; Changes the mouse type
OS_GETMOUSESPEED:       equ 28      ; Retrieves the mouse sensivity
OS_SETMOUSESPEED:       equ 29      ; Changes the mouse sensivity
OS_GETVOLUME:           equ 37      ; Retrieves the sound volume
OS_SETVOLUME:           equ 38      ; Changes the sound volume
OS_GETRAMSIZE:          equ 23      ; Gets the amount of RAM in KB
OS_GETVRAMSIZE:         equ 24      ; Gets the amount of VRAM in KB

OS_STREQU:              equ 35      ; Checks if two strings are identical
OS_INT2ASCII:           equ 25      ; Convert int32 into string
OS_UINT2ASCII:          equ 30      ; Convert uint32 into string

OS_RAND:                equ 32      ; Generate random 16-bit number

;****************************************************************************
; Macros for building the GUI layouts
;****************************************************************************

;--- Indigo 0.10 ------------------------------------------------------------

;----------------------------------------------------------------------------
; Standard button
;----------------------------------------------------------------------------

OSUI_Button: macro id, x,y,width,height, gfx
    dc.b    $00
    dc.b    x,y,width,height
    dc.b    (gfx)>>8, (gfx)&$FF
    dc.b    id
    endm

;----------------------------------------------------------------------------
; Choice widget (e.g. radio button)
;----------------------------------------------------------------------------

OSUI_Select: macro id,value, x,y,width,height, gfx
    dc.b    $01
    dc.b    x,y,width,height
    dc.b    (gfx)>>8, (gfx)&$FF
    dc.b    id,value
    endm

;----------------------------------------------------------------------------
; Toggeable widget (e.g. checkbox)
;----------------------------------------------------------------------------

OSUI_Toggle: macro id, x,y,width,height, gfx
    dc.b    $02
    dc.b    x,y,width,height
    dc.b    (gfx)>>8, (gfx)&$FF
    dc.b    id
    endm

;----------------------------------------------------------------------------
; Button that constantly fires
;----------------------------------------------------------------------------

OSUI_Hold: macro id, x,y,width,height, gfx
    dc.b    $03
    dc.b    x,y,width,height
    dc.b    (gfx)>>8, (gfx)&$FF
    dc.b    id
    endm

;----------------------------------------------------------------------------
; Horizontal scroller
;----------------------------------------------------------------------------

OSUI_HScroll: macro id, x,y,width, fg,bg
    dc.b    $04
    dc.b    x,y,width
    dc.b    (fg)>>8, (fg)&$FF
    dc.b    (bg)>>8, (bg)&$FF
    dc.b    id
    endm

;----------------------------------------------------------------------------
; Vertical scroller
;----------------------------------------------------------------------------

OSUI_VScroll: macro id, x,y,height, fg,bg
    dc.b    $05
    dc.b    x,y,height
    dc.b    (fg)>>8, (fg)&$FF
    dc.b    (bg)>>8, (bg)&$FF
    dc.b    id
    endm

;----------------------------------------------------------------------------
; Timer
;----------------------------------------------------------------------------

OSUI_Timer: macro id,delay
    dc.b    $06
    dc.b    (delay)>>8, (delay)&$FF
    dc.b    id
    endm

;--- Indigo 0.20 ------------------------------------------------------------

;----------------------------------------------------------------------------
; Key press event
;----------------------------------------------------------------------------

OSUI_KeyDown: macro id
    dc.b    $07
    dc.b    id
    endm

;----------------------------------------------------------------------------
; Key release event
;----------------------------------------------------------------------------

OSUI_KeyUp: macro id
    dc.b    $08
    dc.b    id
    endm

;----------------------------------------------------------------------------
; ASCII input event
;----------------------------------------------------------------------------

OSUI_Ascii: macro id
    dc.b    $09
    dc.b    id
    endm

;----------------------------------------------------------------------------
; ClickableArea
;----------------------------------------------------------------------------

OSUI_Clickable: macro id, x,y,width,height
    dc.b    $0A
    dc.b    x,y,width,height
    dc.b    id
    endm

;----------------------------------------------------------------------------

;----------------------------------------------------------------------------
; End of layout
;----------------------------------------------------------------------------

OSUI_End: macro
    dc.b    $FF
    even
    endm

;****************************************************************************
; Possible cursor shapes
;****************************************************************************

OSCURSOR_ARROW:     equ 0               ; Arrow
OSCURSOR_HAND:      equ 1               ; Hand (pointing)
OSCURSOR_BUSY:      equ 2               ; Hourglass
OSCURSOR_IBEAM:     equ 3               ; I-beam
OSCURSOR_GRAB:      equ 4               ; Hand (open)

;****************************************************************************
; Recognized key scancodes
;****************************************************************************

OSKEY_A:            equ $1C
OSKEY_B:            equ $32
OSKEY_C:            equ $21
OSKEY_D:            equ $23
OSKEY_E:            equ $24
OSKEY_F:            equ $2B
OSKEY_G:            equ $34
OSKEY_H:            equ $33
OSKEY_I:            equ $43
OSKEY_J:            equ $3B
OSKEY_K:            equ $42
OSKEY_L:            equ $4B
OSKEY_M:            equ $3A
OSKEY_N:            equ $31
OSKEY_O:            equ $44
OSKEY_P:            equ $4D
OSKEY_Q:            equ $15
OSKEY_R:            equ $2D
OSKEY_S:            equ $1B
OSKEY_T:            equ $2C
OSKEY_U:            equ $3C
OSKEY_V:            equ $2A
OSKEY_W:            equ $1D
OSKEY_X:            equ $22
OSKEY_Y:            equ $35
OSKEY_Z:            equ $1A

OSKEY_0:            equ $45
OSKEY_1:            equ $16
OSKEY_2:            equ $1E
OSKEY_3:            equ $26
OSKEY_4:            equ $25
OSKEY_5:            equ $2E
OSKEY_6:            equ $36
OSKEY_7:            equ $3D
OSKEY_8:            equ $3E
OSKEY_9:            equ $46

OSKEY_SPACE:        equ $29
OSKEY_ENTER:        equ $5A
OSKEY_BACK:         equ $66
OSKEY_TAB:          equ $0D
OSKEY_ESC:          equ $76

OSKEY_LCTRL:        equ $14
OSKEY_RCTRL:        equ $18
OSKEY_LALT:         equ $11
OSKEY_RALT:         equ $17
OSKEY_LSHIFT:       equ $12
OSKEY_RSHIFT:       equ $59

OSKEY_NUM:          equ $77
OSKEY_CAPS:         equ $58
OSKEY_SCROLL:       equ $7E

OSKEY_UP:           equ $89
OSKEY_DOWN:         equ $8A
OSKEY_LEFT:         equ $86
OSKEY_RIGHT:        equ $8D
OSKEY_INS:          equ $81
OSKEY_DEL:          equ $85
OSKEY_HOME:         equ $87
OSKEY_END:          equ $88
OSKEY_PGUP:         equ $8B
OSKEY_PGDN:         equ $8C

OSKEY_F1:           equ $05
OSKEY_F2:           equ $06
OSKEY_F3:           equ $04
OSKEY_F4:           equ $0C
OSKEY_F5:           equ $03
OSKEY_F6:           equ $0B
OSKEY_F7:           equ $83
OSKEY_F8:           equ $0A
OSKEY_F9:           equ $01
OSKEY_F10:          equ $09
OSKEY_F11:          equ $78
OSKEY_F12:          equ $07

OSKEY_PRNSCR:       equ $84
OSKEY_PAUSE:        equ $82

;****************************************************************************
; Modifier key flags (use with btst)
;****************************************************************************

OSKMOD_CTRL:        equ 8
OSKMOD_ALT:         equ 9
OSKMOD_SHIFT:       equ 10

OSKMOD_NUM:         equ 13
OSKMOD_CAPS:        equ 14
OSKMOD_SCROLL:      equ 12
