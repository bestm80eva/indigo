;****************************************************************************
; LoadProcess
; Loads a new process.
;----------------------------------------------------------------------------
; input a6.l ... Pointer to filename
;----------------------------------------------------------------------------
; notes: doesn't return
;****************************************************************************

LoadProcess:
    move.l  a6, -(sp)                   ; We'll need this later
    
    move.b  #CURSOR_BUSY, (CursorShape) ; Show that we're busy
    bsr     ClearScreen                 ; Remove any screen leftovers
    bsr     ResetSprites
    
    moveq   #0, d7                      ; Reset scrolling
    moveq   #0, d6
    move.w  #0, a6
    move.w  #0, a5
    bsr     SetScroll
    
    moveq   #0, d7                      ; Ensure blank tile is blank
    lea     ($C00000), a6
    st.b    (DontDraw)
    move.l  #$7FE00003, 4(a6)
    move.l  d7, (a6)
    move.l  d7, (a6)
    move.l  d7, (a6)
    move.l  d7, (a6)
    move.l  d7, (a6)
    move.l  d7, (a6)
    move.l  d7, (a6)
    move.l  d7, (a6)
    clr.b   (DontDraw)
    
    lea     (TaskbarGfx), a6            ; Load taskbar graphics
    move.w  #VramTaskbar, d7
    moveq   #39, d6
    bsr     LoadPatterns
    
    moveq   #0, d7                      ; Load default GUI palette
    lea     (Palette), a6
    bsr     LoadPalette
    moveq   #$00, d7
    bsr     SetBgColor
    
    bsr     ResetGuiStates              ; Reset all GUI states
    clr.w   (EventX)                    ; Reset last "event" state
    clr.w   (EventY)
    clr.b   (NextAscii)                 ; No text entered yet
    
    move.l  (sp)+, a6                   ; Try to open the file
    bsr     OpenHandle
    move.l  a6, d7
    beq.s   @Error
    cmpi.b  #HMODE_READ, HANDLE_MODE(a6)
    bne.s   @Error
    
    move.l  HANDLE_ADDR(a6), a0         ; Get pointer to program
    clr.w   HANDLE_MODE(a6)             ; Get rid of the handle
    
    move.l  ($0000).w, sp               ; Crunch the stack!
    jmp     (a0)                        ; Start running the program!

;----------------------------------------------------------------------------

@Error:
    illegal

;****************************************************************************
; QuitProcess
; Quits the current process.
;----------------------------------------------------------------------------
; notes: doesn't return
;****************************************************************************

QuitProcess:
    lea     (@Default), a6              ; We can't actually "quit" the
    bra     LoadProcess                 ; running process, instead what we
                                        ; do is load the default process
                                        ; (which is the desktop)

;----------------------------------------------------------------------------

@Default:
    dc.b    '/rom/desktop.ixec',0
    even
