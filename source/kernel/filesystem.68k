;****************************************************************************
; ScanForFile
; Scans for a file entry in a directory.
;----------------------------------------------------------------------------
; input a6.l .... Pointer to directory data
; input a5.l .... Pointer to filename
;----------------------------------------------------------------------------
; output d7.w ... File properties ($FFFF if entry not found)
; output d6.l ... File address (in clusters)
; output d5.l ... File size (in bytes)
;----------------------------------------------------------------------------
; breaks: a4-a6
;----------------------------------------------------------------------------
; notes: directory data must be aligned to a cluster size!! (ideally being
; read directly from ROM/SRAM)
;****************************************************************************

ScanForFile:
@Loop:
    move.w  (a6)+, d7                   ; End of directory?
    cmp.w   #$FFFF, d7
    bne.s   @NotEnd
    moveq   #-1, d7
    moveq   #-1, d6
    moveq   #-1, d5
    rts
    
@NotEnd:
    move.w  d7, -(sp)                   ; Store this entry's properties
    move.w  (a6)+, -(sp)
    move.l  (a6)+, -(sp)
    
    move.l  a5, a4                      ; Check if filename matches
    moveq   #'/', d6
@CompareLoop:
    move.b  (a4)+, d7
    cmp.b   d6, d7
    bne.s   @NotSlash
    moveq   #0, d7
@NotSlash:
    cmp.b   (a6)+, d7
    bne.s   @NotMatch
    tst.b   d7
    beq.s   @Match
    bra.s   @CompareLoop

@NotMatch:
    addq.w  #8, sp                      ; Get rid of the saved properties
    
    subq.l  #1, a6                      ; Skip rest of filename
@SkipName:
    tst.b   (a6)+
    bne.s   @SkipName
    
    move.l  a6, d7                      ; Move onto the next block
    subq.l  #1, d7
    or.w    #$07, d7
    addq.l  #1, d7
    move.l  d7, a6
    
    bra.s   @Loop

;----------------------------------------------------------------------------

@Match:
    moveq   #0, d6                      ; Retrieve entry properties
    move.l  (sp)+, d5
    move.w  (sp)+, d6
    move.w  (sp)+, d7
    
    rts                                 ; End of subroutine
